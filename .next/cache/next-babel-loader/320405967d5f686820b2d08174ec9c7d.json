{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/narda/Desktop/Next/pages/index.js\",\n    _this = this;\n\nimport React from \"react\";\nimport Layout from \"../Components/Layout\";\nimport Head from \"next/head\";\nimport fetch from \"isomorphic-unfetch\";\n\nvar index = function index() {\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Next project/index\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 12\n      }, _this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: \"esto es index\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 12\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }, _this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, _this), /*#__PURE__*/_jsxDEV(Users, {\n      users: props.users\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, _this);\n};\n\nIndex.getInitialProps = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(ctx) {\n    var res, resJSON;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch(\"https://reqres.in/api/users\");\n\n          case 2:\n            res = _context.sent;\n            _context.next = 5;\n            return res.json();\n\n          case 5:\n            resJSON = _context.sent;\n            return _context.abrupt(\"return\", {\n              users: resJSON.data\n            });\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default index;","map":{"version":3,"sources":["/Users/narda/Desktop/Next/pages/index.js"],"names":["React","Layout","Head","fetch","index","props","users","Index","getInitialProps","ctx","res","json","resJSON","data"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAAM;AAClB,sBACE,QAAC,MAAD;AAAA,4BACI,QAAC,IAAD;AAAA,8BACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADH,eAEG;AAAM,QAAA,IAAI,EAAC,aAAX;AAAyB,QAAA,OAAO,EAAC;AAAjC;AAAA;AAAA;AAAA;AAAA,eAFH;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aALJ,eAOE,QAAC,KAAD;AAAO,MAAA,KAAK,EAAEC,KAAK,CAACC;AAApB;AAAA;AAAA;AAAA;AAAA,aAPF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAWD,CAZD;;AAcAC,KAAK,CAACC,eAAN;AAAA,sEAAwB,iBAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACJN,KAAK,CAAC,6BAAD,CADD;;AAAA;AAChBO,YAAAA,GADgB;AAAA;AAAA,mBAEAA,GAAG,CAACC,IAAJ,EAFA;;AAAA;AAEhBC,YAAAA,OAFgB;AAAA,6CAGf;AACLN,cAAAA,KAAK,EAAEM,OAAO,CAACC;AADV,aAHe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxB;;AAAA;AAAA;AAAA;AAAA;;AAQA,eAAeT,KAAf","sourcesContent":["import React from \"react\";\nimport Layout from \"../Components/Layout\";\nimport Head from \"next/head\";\nimport fetch from \"isomorphic-unfetch\";\n\nconst index = () => {\n  return (\n    <Layout>\n        <Head>\n           <title>Next project/index</title> \n           <meta name=\"description\" content=\"esto es index\"></meta>\n        </Head>\n        <h1>Next</h1>\n      {/* {props.users[0].id} */}\n      <Users users={props.users} />\n    </Layout>\n  );\n};\n\nIndex.getInitialProps = async (ctx) => {\n  const res = await fetch(\"https://reqres.in/api/users\");\n  const resJSON = await res.json();\n  return {\n    users: resJSON.data,\n  };\n};\n\nexport default index;\n"]},"metadata":{},"sourceType":"module"}